defmodule Tako.Accounts.User do
  @moduledoc """
  Resource definition for a User.
  """
  use Ash.Resource, data_layer: AshPostgres.DataLayer, extensions: [AshJsonApi.Resource]

  postgres do
    table "users"
    repo Tako.Repo
  end

  code_interface do
    define_for Tako.Accounts
    define :create, action: :create
    define :read_all, action: :read
    define :update, action: :update
    define :destroy, action: :destroy
    define :get_by_id, args: [:id], action: :by_id
  end

  json_api do
    type "user"

    routes do
      base("/users")

      get(:read)
      index :read
      post(:create)
      patch(:update)
    end
  end

  actions do
    # Exposes default built in actions to manage the resource
    defaults [:create, :read, :update, :destroy]

    # Defines custom read action which fetches post by id.
    read :by_id do
      # This action has one argument :id of type :uuid
      argument :id, :uuid, allow_nil?: false
      # Tells us we expect this action to return a single result
      get? true
      # Filters the `:id` given in the argument
      # against the `id` of each element in the resource
      filter expr(id == ^arg(:id))
    end

    update do
      validations(
        nickname: [length: [min: 3, max: 20]],
        stamps_collected: [numericality: [greater_than_or_equal_to: 0]]
      )
    end
  end

  attributes do
    # Add an autogenerated UUID primary key called `:id`.
    uuid_primary_key :id
    attribute :nickname, :string, constraints: [max_length: 20]

    attribute :stamps_collected, :integer, default: 0
  end

  validations do
    validate {Tako.Accounts.Resources.NicknameValidation, []}
  end
end
